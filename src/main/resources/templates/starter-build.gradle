buildscript {
	ext {
		{{#buildPropertiesGradle}}
		{{key}} = '{{value}}'
		{{/buildPropertiesGradle}}
		{{#hasAcidDependency}}
		acidFrameworkVersion = '{{acidFrameworkVersion}}'
		{{/hasAcidDependency}}
		{{#mapstructVersion}}
		mapstructVersion = '{{mapstructVersion}}'
		{{/mapstructVersion}}
		{{#lombokVersion}}
		lombokVersion = '{{lombokVersion}}'
		{{/lombokVersion}}
	}

	dependencies {
		{{#hasAcidDependency}}
		classpath "com.mycompany.acid:acid-spring-boot-gradle-plugin:$acidFrameworkVersion"
		{{^springBootMajorVersionMatchesAcidSpringBootVersion}}
		classpath "org.springframework.boot:spring-boot-gradle-plugin:$springBootVersion"
    {{/springBootMajorVersionMatchesAcidSpringBootVersion}}
		{{/hasAcidDependency}}
		{{#hasAcidService}}
		classpath 'com.mycompany.commercial.gradle:swagger-documentation-plugin:{{swaggerDocumentationVersion}}'
		{{/hasAcidService}}
		{{^hasAcidDependency}}
		classpath "org.springframework.boot:spring-boot-gradle-plugin:$springBootVersion"
		classpath "gradle.plugin.com.gorylenko.gradle-git-properties:gradle-git-properties:1.4.17"
		{{/hasAcidDependency}}
		{{#mapstructVersion}}
		classpath "net.ltgt.gradle:gradle-apt-plugin:0.18"
		{{/mapstructVersion}}
		{{^mapstructVersion}}
		{{#lombokDependency}}
		classpath "net.ltgt.gradle:gradle-apt-plugin:0.18"
		{{/lombokDependency}}
		{{/mapstructVersion}}
	}

	configurations.classpath {
		resolutionStrategy.cacheDynamicVersionsFor 5, 'minutes'
	}
}

{{^buildPropertiesVersions.empty}}
ext {
  {{#buildPropertiesVersions}}
  {{key}} = "{{value}}"
  {{/buildPropertiesVersions}}
}
{{/buildPropertiesVersions.empty}}

group = '{{groupId}}'

{{#hasAcidDependency}}
apply plugin: 'com.mycompany.acid.gradle.acid-spring-boot-gradle-plugin'
{{/hasAcidDependency}}
{{^hasAcidDependency}}
apply plugin: '{{springBootPluginName}}'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'com.gorylenko.gradle-git-properties'
{{/hasAcidDependency}}
{{#war}}
apply plugin: 'com.mycompany.war'
{{/war}}
{{^war}}
apply plugin: 'com.mycompany.java'
{{/war}}
{{#hasAcidService}}
apply plugin: 'com.mycompany.commercial.gradle.swagger-documentation'
{{/hasAcidService}}
{{#mapstructVersion}}
apply plugin: 'net.ltgt.apt'
{{/mapstructVersion}}
{{^mapstructVersion}}
{{#lombokDependency}}
apply plugin: 'net.ltgt.apt'
{{/lombokDependency}}
{{/mapstructVersion}}

sourceCompatibility = {{javaVersion}}

{{^hasAcidDependency}}
springBoot {
	buildInfo()
}

generateGitProperties {
	onlyIf {
		!source.isEmpty()
	}
}
{{/hasAcidDependency}}

{{#hasBoms}}
dependencyManagement {
  imports {
    {{#reversedBoms}}
    mavenBom "{{groupId}}:{{artifactId}}:{{versionToken}}"
    {{/reversedBoms}}
  }
}
{{/hasBoms}}
dependencies {
	{{#compileDependencies}}
	compile '{{groupId}}:{{artifactId}}{{#version}}:{{version}}{{/version}}{{#type}}@{{type}}{{/type}}'
	{{/compileDependencies}}
	{{#hasAcidService}}
	compile 'io.springfox:springfox-swagger2'
	compile 'io.springfox:springfox-swagger-ui'
	javaClientCompile 'org.apache.commons:commons-lang3'
	javaClientCompile 'com.fasterxml.jackson.dataformat:jackson-dataformat-xml'
	javaClientCompile 'io.swagger:swagger-annotations'
	{{/hasAcidService}}
	{{#runtimeDependencies}}
	runtime '{{groupId}}:{{artifactId}}{{#version}}:{{version}}{{/version}}{{#type}}@{{type}}{{/type}}'
	{{/runtimeDependencies}}
	{{#hasAcidDependency}}
	runtime 'org.slf4j:jul-to-slf4j'
	{{/hasAcidDependency}}
	{{#compileOnlyDependencies}}
	compileOnly '{{groupId}}:{{artifactId}}{{#version}}:{{version}}{{/version}}{{#type}}@{{type}}{{/type}}'
	{{/compileOnlyDependencies}}
	{{#isBoot1}}
	providedCompile 'javax.servlet:javax.servlet-api'
	{{/isBoot1}}
	{{#providedDependencies}}
	providedRuntime '{{groupId}}:{{artifactId}}{{#version}}:{{version}}{{/version}}{{#type}}@{{type}}{{/type}}'
	{{/providedDependencies}}
	testCompile 'org.springframework.boot:spring-boot-starter-test'
	{{#testDependencies}}
	testCompile '{{groupId}}:{{artifactId}}{{#version}}:{{version}}{{/version}}{{#type}}@{{type}}{{/type}}'
	{{/testDependencies}}
	{{#hasAcidDependency}}
	testCompile 'com.mycompany.acid:acid-spring-boot-starter-test'
	{{/hasAcidDependency}}
	{{#hasAcidService}}
	testCompile 'io.github.swagger2markup:swagger2markup:1.3.1'
	testCompile 'io.github.robwin:assertj-swagger:0.6.0'
	testCompile 'org.codehaus.groovy:groovy-json'
	{{#isBoot1}}
	testCompile 'pl.pragmatists:JUnitParams'
	{{/isBoot1}}
	{{/hasAcidService}}
	{{#useJUnitJupiter}}
	testCompile 'org.junit.jupiter:junit-jupiter-api'
  testCompile 'org.junit.jupiter:junit-jupiter-params'
  testRuntime 'org.junit.jupiter:junit-jupiter-engine'
  testRuntime 'org.junit.vintage:junit-vintage-engine'
	{{/useJUnitJupiter}}
	{{#isBoot1}}
	testRuntime 'com.h2database:h2'
	{{/isBoot1}}
	{{#lombokDependency}}
	annotationProcessor '{{lombokDependency}}'
	{{/lombokDependency}}
	{{#mapstructVersion}}
	annotationProcessor "org.mapstruct:mapstruct-processor:$mapstructVersion"
	{{/mapstructVersion}}
}

{{#useJUnitJupiter}}
tasks.withType(Test) {
	useJUnitPlatform()
}
{{/useJUnitJupiter}}
